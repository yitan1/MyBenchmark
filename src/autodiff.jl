using Zygote
using TensorOperations, TensorRules
using OMEinsum
using Tullio
function test_tc()
    D = 4
    X = 50
    C = rand(X, X)
    E = rand(X, X, D)
    T = rand(D, D, D, D)

    @∇ function fa(C, E, T)
        @tensor res[m1,m2,m3,m4] := C[p2,p1]*E[p1,m1,p3]*E[p2,m2,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    @∇ function fs(C, E, T)
        @tensor CE[m1, m2, m3] := C[m2,p1]*E[p1,m1,m3]
        @tensor CEE[m1,m2,m3,m4] := CE[m1,p2,m3]*E[p2,m2,m4]
        @tensor res[m1,m2,m3,m4] := CEE[m1,m2,p3,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    @time fa(C,E,T);
    @time fs(C,E,T);
    @time gradient(x-> fa(C, E, x), T);
    @time gradient(x-> fs(C, E, x), T);
    return nothing
end

function test_ein()
    D = 4
    X = 50
    C = rand(X, X)
    E = rand(X, X, D)
    T = rand(D, D, D, D)

    function fa(C, E, T)
        @ein res[m1,m2,m3,m4] := C[p2,p1]*E[p1,m1,p3]*E[p2,m2,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    function fs(C, E, T)
        @ein CE[m1, m2, m3] := C[m2,p1]*E[p1,m1,m3]
        @ein CEE[m1,m2,m3,m4] := CE[m1,p2,m3]*E[p2,m2,m4]
        @ein res[m1,m2,m3,m4] := CEE[m1,m2,p3,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    @time fa(C,E,T);
    @time fs(C,E,T);
    @time gradient(x-> fa(C, E, x), T);
    @time gradient(x-> fs(C, E, x), T);
    return nothing
end

function test_tull()
    D = 4
    X = 50
    C = rand(X, X)
    E = rand(X, X, D)
    T = rand(D, D, D, D)

    function fa(C, E, T)
        Tullio.@tensor res[m1,m2,m3,m4] := C[p2,p1]*E[p1,m1,p3]*E[p2,m2,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    function fs(C, E, T)
        Tullio.@tensor CE[m1, m2, m3] := C[m2,p1]*E[p1,m1,m3]
        Tullio.@tensor CEE[m1,m2,m3,m4] := CE[m1,p2,m3]*E[p2,m2,m4]
        Tullio.@tensor res[m1,m2,m3,m4] := CEE[m1,m2,p3,p4]*T[p3,p4, m3, m4]
        res[1]
    end

    @time fa(C,E,T);
    @time fs(C,E,T);
    @time gradient(x-> fa(C, E, x), T);
    @time gradient(x-> fs(C, E, x), T);
    return nothing
end

function svd_ad()
using Zygote
using OMEinsum 
using LinearAlgebra: svd
# using GenericLinearAlgebra: svd
function f(m)
    U, S, V = svd( m )
    @show S
    return U[1]
end

function test()

    m1 = [0.9966729985257432 2.4614026561418658e-8 -1.4662052991923572e-13 2.4614026561416352e-8 0.0002771116035001569 -0.00027709607348218437 1.4660214984262392e-13 0.0002770960734827305 -0.000277080544335815; 2.4614026561418658e-8 0.00027695768894773343 0.00027694216755605775 1.7359966208232817e-10 -2.561804158414186e-10 -3.80086587106461e-15 3.620550268592712e-21 -2.6300518540566453e-10 -6.842708763825336e-12; -1.4662052991923572e-13 0.00027694216755605775 0.0002769266470349557 -3.620883819887297e-21 -2.630090677981402e-10 6.8389895390441526e-12 1.7357959691740416e-10 -2.698334009860051e-10 8.1517453336514e-17; 2.4614026561416352e-8 1.7359966208232817e-10 -3.620883819887297e-21 0.000276957688948279 -2.5618041584193677e-10 2.6300518540057096e-10 -0.0002769421675560576 3.800865593734127e-15 -6.842708758427965e-12; 0.0002771116035001569 -2.561804158414186e-10 -2.630090677981402e-10 -2.5618041584193677e-10 1.5400881455237724e-7 -8.558299720130033e-11 2.630090677930291e-10 8.558299750480673e-11 -1.5399155220674908e-7; -0.00027709607348218437 -3.80086587106461e-15 6.8389895390441526e-12 2.6300518540057096e-10 -8.558299720130033e-11 1.5399155220689474e-7 -2.6983340097525596e-10 -1.5399155195713188e-7 8.557340475982849e-11; 1.4660214984262392e-13 3.620550268592712e-21 1.7357959691740416e-10 -0.0002769421675560576 2.630090677930291e-10 -2.6983340097525596e-10 0.00027692664703440976 6.838989534210779e-12 -8.151774000354929e-17; 0.0002770960734827305 -2.6300518540566453e-10 -2.698334009860051e-10 3.800865593734127e-15 8.558299750480673e-11 -1.5399155195713188e-7 6.838989534210779e-12 1.5399155220689506e-7 -8.557340506331604e-11; -0.000277080544335815 -6.842708763825336e-12 8.1517453336514e-17 -6.842708758427965e-12 -1.5399155220674908e-7 8.557340475982849e-11 -8.151774000354929e-17 -8.557340506331604e-11 1.5397429229547095e-7]
    m2 = [0.9966729995557029 2.2875616735540974e-8 -3.137162197523065e-15 2.2875616733427594e-8 0.00027709598854137304 0.00027709598853086783 3.11781788855719e-15 -0.00027709598853117894 -0.0002770959885211988; 2.2875616735540974e-8 0.00027694208270952886 -0.00027694208269933996 5.807173092847765e-16 1.2716258952361389e-11 3.5324433563055526e-15 7.155811638325043e-23 -6.3598895032823645e-12 -6.359901891756355e-12; -3.137162197523065e-15 -0.00027694208269933996 0.0002769420826896764 -7.200210654868093e-23 -6.356358798933422e-12 6.356367709385669e-12 5.567665781316518e-17 -1.0649687272234072e-17 1.7390145024158106e-18; 2.2875616733427594e-8 5.807173092847765e-16 -7.200210654868093e-23 0.0002769420827098397 1.2716258952368198e-11 6.3598894973125245e-12 0.0002769420826993398 -3.5324421942863478e-15 -6.359901896549566e-12; 0.00027709598854137304 1.2716258952361389e-11 -6.356358798933422e-12 1.2716258952368198e-11 1.5399145740185385e-7 8.557812185028287e-11 6.3563587941425324e-12 -8.557812202318426e-11 -1.5399145739049633e-7; 0.00027709598853086783 3.5324433563055526e-15 6.356367709385669e-12 6.3598894973125245e-12 8.557812185028287e-11 1.539914573904962e-7 -1.0660440531860812e-17 -1.5399145739035038e-7 -8.557812184413537e-11; 3.11781788855719e-15 7.155811638325043e-23 5.567665781316518e-17 0.0002769420826993398 6.3563587941425324e-12 -1.0660440531860812e-17 0.00027694208268936536 6.3563677153382516e-12 -1.73901715513418e-18; -0.00027709598853117894 -6.3598895032823645e-12 -1.0649687272234072e-17 -3.5324421942863478e-15 -8.557812202318426e-11 -1.5399145739035038e-7 6.3563677153382516e-12 1.5399145739049636e-7 8.557812201704097e-11; -0.0002770959885211988 -6.359901891756355e-12 1.7390145024158106e-18 -6.359901896549566e-12 -1.5399145739049633e-7 -8.557812184413537e-11 -1.73901715513418e-18 8.557812201704097e-11 1.5399145737943067e-7]
    @show jacobian(f,m1)
    @show jacobian(f,m2)
end

test()
end